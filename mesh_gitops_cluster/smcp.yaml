apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "3"
  finalizers:
  - maistra.io/istio-operator
  name: basic
  namespace: istio-system
spec:
  proxy:
    accessLogging:
      file:
        format: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% \"%UPSTREAM_TRANSPORT_FAILURE_REASON%\" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME% DURATION --> %DURATION% \n"
        name: /dev/stdout
  meshConfig:
    extensionProviders:
      - name: tempo
        zipkin:
          service: tempo-sample-distributor.tracing-system.svc.cluster.local
          port: 9411
  tracing:
    sampling: 10000
    type: None 
  security:
    dataPlane:
      mtls: true
    certificateAuthority:
      type: Istiod
      istiod:
        type: PrivateKey
        privateKey:
          rootCADir: /etc/cacerts
  addons:
    grafana:
      enabled: true
    kiali:
      enabled: true
    prometheus:
      enabled: true
  gateways:
    egress:
      enabled: true
      runtime:
        deployment:
          autoScaling:
            enabled: false
          replicas: 3
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringScheduling:
              - key: app
                operator: In
                topologyKey: topology.kubernetes.io/zone
                values:
                - istio-egressgateway
    ingress:
      enabled: true
      runtime:
        deployment:
          autoScaling:
            enabled: false
          replicas: 3
        pod:
          metadata:
            labels:
              version: v1
          affinity:
            podAntiAffinity:
              requiredDuringScheduling:
              - key: app
                operator: In
                topologyKey: topology.kubernetes.io/zone
                values:
                - istio-ingressgateway
      volumes:
      - volume:
          secret:
            secretName: istio-ingressgateway-custom-certs
        volumeMount:
          mountPath: /etc/istio/custom-certs
          name: custom-certs
    openshiftRoute:
      enabled: false
  policy:
    type: Istiod
  profiles:
  - default
  telemetry:
    type: Istiod
  version: v2.5
