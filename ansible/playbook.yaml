- name: Day-1 Configure ARO cluster Playbook
  hosts: localhost
  module_defaults:
    redhat.openshift.openshift_auth:
      host: https://api.agabriel-neu.northeurope.aroapp.io:6443/
      ca_cert: ca.pem
      validate_certs: no
  tasks:
    - name: Authenticate to OpenShift cluster and gell a list of all pods from any namespace
      block:
        # It's good practice to store login credentials in a secure vault and not
        # directly in playbooks.
        - name: Include 'openshift_passwords.yml'
          ansible.builtin.include_vars: openshift_passwords.yml

        - name: Log in (obtain access token)
          redhat.openshift.openshift_auth:
            username: kubeadmin
            password: "{{ openshift_admin_password }}"
          register: openshift_auth_results

        - name: Create Projects by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: ../cluster_conf/projects.yaml

        - name: Create a IngressController by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: ../cluster_conf/ingresscontroller.yaml

        - name: Create OperatorGroups by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: ../cluster_conf/operatorgroup.yaml

        - name: Create Subscriptions by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: ../cluster_conf/subscriptions.yaml

        - name: Create ServiceMeshControlPlane by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: ../cluster_conf/smcp.yaml
            wait: true

        - name: Create ServiceMeshMemberRole by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: ../cluster_conf/smmr.yaml
            wait: true

        - name: Create BlueGreen Kube resources by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: ../workload_conf/bluegreen.yaml

      always:
        - name: If login succeeded, try to log out (revoke access token)
          when: openshift_auth_results.openshift_auth.api_key is defined
          redhat.openshift.openshift_auth:
            state: absent
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
