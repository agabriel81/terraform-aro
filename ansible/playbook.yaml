- name: Day-1 Configure ARO cluster Playbook
  hosts: localhost
  module_defaults:
    group/redhat.openshift.okd:
      host: https://k8s.example.com/
      ca_cert: ca.pem
  tasks:
    - name: Authenticate to OpenShift cluster
      block:
        # It's good practice to store login credentials in a secure vault and not
        # directly in playbooks.
        - name: Include 'openshift_passwords.yml'
          ansible.builtin.include_vars: openshift_passwords.yml

        - name: Log in (obtain access token)
          redhat.openshift.openshift_auth:
            username: kubeadmin
            password: "{{ openshift_admin_password }}"
          register: openshift_auth_results

        # Previous task provides the token/api_key, while all other parameters
        # are taken from module_defaults
        - name: Get a list of all pods from any namespace
          kubernetes.core.k8s_info:
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            kind: Pod
          register: pod_list

        - name: Create a Deployment by reading the definition from a local file
          redhat.openshift.k8s:
            state: present
            src: /testing/deployment.yml

        - name: fail on validation errors
          redhat.openshift.k8s:
            state: present
            definition: "{{ lookup('template', '/testing/deployment.yml') | from_yaml }}"
            validate:
              fail_on_error: true

        - name: warn on validation errors, check for unexpected properties
          redhat.openshift.k8s:
            state: present
            definition: "{{ lookup('template', '/testing/deployment.yml') | from_yaml }}"
            validate:
              fail_on_error: false
              strict: true

      always:
        - name: If login succeeded, try to log out (revoke access token)
          when: openshift_auth_results.openshift_auth.api_key is defined
          redhat.openshift.openshift_auth:
            state: absent
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"


- name: Create a Deployment by reading the definition from a local file
  redhat.openshift.k8s:
    state: present
    src: /testing/deployment.yml

- name: fail on validation errors
  redhat.openshift.k8s:
    state: present
    definition: "{{ lookup('template', '/testing/deployment.yml') | from_yaml }}"
    validate:
      fail_on_error: true

- name: warn on validation errors, check for unexpected properties
  redhat.openshift.k8s:
    state: present
    definition: "{{ lookup('template', '/testing/deployment.yml') | from_yaml }}"
    validate:
      fail_on_error: false
      strict: true
